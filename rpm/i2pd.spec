# 
# Do NOT Edit the Auto-generated Part!
# Generated by: spectacle version 0.32
# 

Name:       i2pd

# >> macros
# << macros
%define custom_vardir /home/.system/%{_var}/lib

Summary:    End-to-End encrypted and anonymous Internet daemon
Version:    2.41.0
Release:    0
Group:      Applications/Internet
License:    BSD-3-Clause
URL:        https://i2pd.website
Source0:    %{name}-%{version}.tar.gz
Source1:    %{name}.conf
Source2:    %{name}.service
Source3:    openssl-family.cnf
Source100:  i2pd.yaml
Requires:   systemd
Requires(post): systemd
Requires(post): /sbin/ldconfig
Requires(postun): systemd
Requires(postun): /sbin/ldconfig
BuildRequires:  pkgconfig(libssl)
BuildRequires:  pkgconfig(zlib)
BuildRequires:  gcc-c++
BuildRequires:  cmake
BuildRequires:  boost-devel >= 1.49
BuildRequires:  systemd
BuildRequires:  openssl

%description
%{summary}.

I2P (Invisible Internet Protocol) is a universal anonymous network layer.
All communications over I2P are anonymous and end-to-end encrypted,
participants don't reveal their real IP addresses.

I2P client is a software used for building and using anonymous I2P
networks. Such networks are commonly used for anonymous peer-to-peer
applications (filesharing, cryptocurrencies) and anonymous client-server
applications (websites, instant messengers, chat-servers).

I2P allows people from all around the world to communicate and share
information without restrictions.

Notices for SailfishOS:
  - the config lives in `/home/.system/var/lib/i2pd`, not `/etc`
  - the web console is reachable at http://127.0.0.1:7070
  - join the 'sailfishos' family!
  - for more information, se the README at https://github.com/nephros/i2pd/blob/main/README.md

%if "%{?vendor}" == "chum"
PackageName: I2Pd
Type: console-application
PackagerName: nephros
Categories:
 - Network
 - P2P
Custom:
  Repo: https://github.com/PurpleI2P/i2pd
  PackagingRepo: https://github.com/nephros/i2pd
Icon: https://i2pd.website/images/favicon.png
Url:
  Homepage: https://i2pd.website
  Help: https://i2pd.readthedocs.io/en/latest
  Donations: https://i2pd.website/#donations
%endif


%prep
%setup -q -n %{name}-%{version}/upstream

# >> setup
# << setup

%build
# >> build pre
pushd build
# << build pre

%cmake .  \
    -DCMAKE_BUILD_TYPE=Release


# >> build post
%make_build %{?_smp_mflags}

# generate familty certificate files:
# TODO: build-time is probably not the brightest way to do that...
mkdir -p %{_builddir}/family-cert
pushd %{_builddir}/family-cert
openssl ecparam -name prime256v1 -genkey -out sailfishos.key
openssl req -new -key sailfishos.key -out sailfishos.csr -config %{SOURCE3}
touch v3.ext
openssl x509 -req -days 3650 -in sailfishos.csr -signkey sailfishos.key -out sailfishos.crt -extfile v3.ext
popd
# << build post

%install
rm -rf %{buildroot}
# >> install pre
pushd build
%make_install
popd
# << install pre

# >> install post
install -m 644 -D %{SOURCE1}      %{buildroot}%{custom_vardir}/%{name}/%{name}.conf
install -m 644 -D %{SOURCE2}      %{buildroot}%{_unitdir}/%{name}.service
pushd contrib
install -m 644 -D tunnels.conf    %{buildroot}%{custom_vardir}/%{name}/tunnels.conf.example
install -m 644 -D %{name}.conf    %{buildroot}%{custom_vardir}/%{name}/%{name}.conf.example
mkdir -p %{buildroot}%{custom_vardir}/%{name}/tunnels.d
mkdir -p %{buildroot}%{custom_vardir}/%{name}/addressbook
mkdir -p %{buildroot}%{custom_vardir}/%{name}/certificates
for f in certificates/family/*  certificates/reseed/* ; do
install -m 644 -D ${f}    %{buildroot}%{custom_vardir}/%{name}/${f}
done
popd
install -m 640 -D %{_builddir}/family-cert/sailfishos.key %{buildroot}%{custom_vardir}/%{name}/family/sailfishos.key
install -m 640 -D %{_builddir}/family-cert/sailfishos.crt %{buildroot}%{custom_vardir}/%{name}/family/sailfishos.crt
# << install post

%post
/sbin/ldconfig
# >> post
if [ "$1" -ge 1 ]; then
systemctl daemon-reload || :
systemctl try-restart %{name}.service || :
fi
# << post

%postun
/sbin/ldconfig
# >> postun
if [ "$1" -eq 0 ]; then
systemctl stop %{name}.service || :
systemctl daemon-reload || :
fi
# << postun

%files
%defattr(-,root,root,-)
%license LICENSE
%{_unitdir}/%{name}.service
%{_bindir}/%{name}
%{_libdir}/*.so
%attr(775,root,inet) %dir %{custom_vardir}/%{name}
%attr(770,root,inet) %dir %{custom_vardir}/%{name}/tunnels.d
%attr(775,root,inet) %dir %{custom_vardir}/%{name}/addressbook
%{custom_vardir}/%{name}/certificates/*/*
%attr(640,root,inet) %config %{custom_vardir}/%{name}/family/sailfishos.crt
%attr(640,root,inet) %config %{custom_vardir}/%{name}/family/sailfishos.key
%attr(640,root,inet) %config(noreplace) %{custom_vardir}/%{name}/%{name}.conf
%config(noreplace) %{custom_vardir}/%{name}/%{name}.conf.example
%config(noreplace) %{custom_vardir}/%{name}/tunnels.conf.example
# >> files
# << files
